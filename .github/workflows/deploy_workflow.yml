name: deploy

on:
  push:
    branches: [ "main" ]


jobs:
  #test:
  #  runs-on: ubuntu-latest

   # steps:
   #   - uses: actions/checkout@v2
   #   - name: Set up Python
   #     uses: actions/setup-python@v2
   #     with:
   #       python-version: 3.11

   #   - name: Install dependencies
   #     run: | 
   #       python -m pip install --upgrade pip 
   #       pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
   #       pip install -r backend/foodgram/requirements.txt 

#      - name: Test with flake8
#        run: |
#          python -m flake8 

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Setup Docker BuildX
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: sagaart/
        push: true
        tags: hackathonsagaart/sagaart_backend:hackathon

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY}}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull hackathonsagaart/sagaart_backend:hackathon
            sudo docker compose stop
            sudo docker compose rm backend
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} > .env
            echo POSTGRES_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env
            echo DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }} >> .env
            echo DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }} >> .env
            #echo REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }} >> .env
            sudo docker compose up -d --build
            sudo docker image prune --force
